// これは何？
BonDriverProxyのサーバ側にBonDriver自動選択機能を加えたものです。
dll側はバイナリ互換なので、BonDriverProxyの物を使用できます。

BonDriverProxyとの設定方法の違いは、まずサーバ側のiniで、
---
[BONDRIVER]
00=PT-T;BonDriver_PT3-T0.dll;BonDriver_PT3-T1.dll
01=PT-S;BonDriver_PT3-S0.dll;BonDriver_PT3-S1.dll
---
の様な感じでチューナ空間とチャンネルの対応が同一のBonDriverを「;」区切りで並べます。
＃なので、グループ名やファイル名に「;」は使えません
BonDriverのグループは「00」「01」「02」...と言う連番で指定し、
個々のグループのフォーマットは
「グループ名;ドライバ1;ドライバ2;ドライバ3...」
と言う感じになります。
グループ名は必須です。

クライアント側のiniでは、
---
[OPTION]
BONDRIVER=PT-T
---
の様な感じで、サーバ側iniのどのBonDriverグループを使用するか設定します。
＃機能の要件上、一つのグループに二つ以上のドライバが設定されている場合、
＃クライアントからはそれらの内どれが使われるかは制御できなくなります

それら以外の設定は、元のBonDriverProxyと同じです。

グループ内のどのBonDriverを選択するかのアルゴリズムは、
・最初のリクエストではとりあえず可能であれば未使用の物を、それが無理ならなるべくチャンネルロックされていない
  物を優先して選択
・チャンネル変更時、同一グループの中で、既に目的のチャンネルを開いているのがいたらそれを共有
  その際、現在自分が持っているインスタンスは、他者と共有されていない限り開放する
・共有状態からのチャンネル変更時は、最初のリクエストと同じ
・チャンネルロックされているインスタンスを共有している時のチャンネル変更は、未使用かチャンネルロックされていない
  インスタンスがある場合は使用インスタンスをそっちに切り替えて変更、無い場合は変更できない

こんな感じでしょうか？他にあるかな…
ぶっちゃけ自分でも書いてて訳がわからなくなってますが、実際テストパターンの網羅性にイマイチ自信が持ててないので、
何かしらバグがある可能性は高めです。
よっしゃテストしたるわ、という方がいたら追試していただけたらと思います。

// ライセンス
MITライセンスとします。
LICENSE.txt参照。

Jun/10/2014 unknown <unknown_@live.jp>

// 更新履歴
version 1.1.4.2 (Aug/28/2014)
	・受信スレッドの冗長なチェックを削除
	・delete対象として、NULLでない場合が大半の物に付いてはNULLチェック削除
	・delete後、即スコープを抜けるなどでNULLクリアが不要な物はNULLクリア削除
	・その他ロジックは変更無しでのソースコード整形

version 1.1.4.0 (Jul/04/2014)
	・サーバ側のTSストリーム配信時のロック処理をロードしたBonDriverのインスタンス毎にグループ分けした
	  これにより、グローバルなインスタンスリストのロックや他のBonDriverインスタンスのTSストリーム配信処理の影響を
	  受けなくなるのと、個々のクライアントへのTSパケット作成時にロック及び比較処理が不要になる
	・サーバ側のグローバルなインスタンスロック処理を厳密に行うのをデフォルトにした
	  ＃詳細はBonDriverProxyの方のReadMe.txt参照
	・チャンネル変更を行った際に、その対象BonDriverインスタンスを共有しているインスタンスが保持している
	  スペース/チャンネル情報を更新していなかったのを修正

version 1.1.2.0 (Jun/19/2014)
	・SetChannel()内で、GetTsStream()でアプリに返したバッファを解放してしまうBonDriverを読み込んだ場合、
	  タイミングが悪いと解放後メモリにアクセスしてしまう可能性があったのに対応
	・その他ロジックは(ほぼ)変更無しでのソースコード整形

version 1.1.1.0 (Jun/10/2014)
	・初版リリース
